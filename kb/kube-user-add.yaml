##REMOTE user add
------Kube-server-side--------------------
openssl genrsa -out ram.key 2048
openssl req -new -key ram.key -out ram.csr
openssl x509 -req -in ram.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out ram.crt -days 365
scp ram.* root@172.31.15.23:/tmp/ (SCP certs to client machine)
----------------------------------
Local-role (Only this is required)
----------------------------------
kind: Role
metadata:
  name: ram-role
  namespace: nginx-ingress
rules:
  - apiGroups: [ "*" ]
    resources: [ "*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ram-rolebinding
  namespace: nginx-ingress
subjects:
- kind: User
  name: "ram.giri.local"
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: ram-role
  apiGroup: rbac.authorization.k8s.io

----------------------------------------
Cluster-role (Just in case test purpose)
----------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ram-CR
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs: ["*"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs: ["list", "get", "watch", "delete", "create"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs: ["list", "get", "watch", "bind", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ram-CRB
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ram-CR
subjects:
- kind: User
  name: "ram.giri.local"
  apiGroup: rbac.authorization.k8s.io


--------Kube-client-side---------------
kubectl config set-cluster sm --insecure-skip-tls-verify=true --server=https://172.31.12.84:6443
kubectl config set-credentials ram --client-key ram.key --client-certificate ram.crt --embed-certs
kubectl config set-context ram --cluster=sm --namespace=nginx-ingress --user=ram
kubectl config use-context ram
Test: k get po 

